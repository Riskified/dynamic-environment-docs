"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[436],{3299:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=i(5893),t=i(1151);const r={sidebar_label:"Tips and Tricks",sidebar_position:2},o="Tips and Tricks",c={id:"advanced/tips-and-tricks",title:"Tips and Tricks",description:"This document offers advanced tips and tricks for working with DynamicEnvironment.",source:"@site/docs/advanced/tips-and-tricks.md",sourceDirName:"advanced",slug:"/advanced/tips-and-tricks",permalink:"/dynamic-environment-docs/next/advanced/tips-and-tricks",draft:!1,unlisted:!1,editUrl:"https://github.com/Riskified/dynamic-environment-docs/edit/main/docs/advanced/tips-and-tricks.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Tips and Tricks",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Technical Overview",permalink:"/dynamic-environment-docs/next/advanced/technical-overview"},next:{title:"Extensions",permalink:"/dynamic-environment-docs/next/advanced/extensions"}},a={},d=[{value:"SourceLabels Propagation",id:"sourcelabels-propagation",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"tips-and-tricks",children:"Tips and Tricks"}),"\n",(0,s.jsxs)(n.p,{children:["This document offers advanced tips and tricks for working with ",(0,s.jsx)(n.em,{children:"DynamicEnvironment"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"sourcelabels-propagation",children:"SourceLabels Propagation"}),"\n",(0,s.jsxs)(n.p,{children:["While ",(0,s.jsx)(n.em,{children:"DynamicEnvironment"})," is not responsible for propagating source-labels throughout the services\npath, it does provide the option to add specific source-labels to the deployments it creates. You\ncan achieve this using the ",(0,s.jsx)(n.code,{children:"podLabels"})," field in\nthe ",(0,s.jsx)(n.a,{href:"/dynamic-environment-docs/next/references/crd#subset",children:"CRD Subset reference"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"It's important to note that you cannot solely rely on this mechanism to carry source-labels across\nthe entire service flow. Consider the following scenario:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"service-with-non-linear-overrides",src:i(9205).Z+"",width:"1334",height:"501"})}),"\n",(0,s.jsx)(n.p,{children:"In this situation, when controlling routing based on source-labels, you may encounter a challenge:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["The test client sends a request with valid source-labels to ",(0,s.jsx)(n.code,{children:"Service A"}),', resulting in it reaching\nthe "Test Version" due to the source-labels.']}),"\n",(0,s.jsxs)(n.li,{children:['However, when "Service A" sends a request to ',(0,s.jsx)(n.code,{children:"Service B"}),', the lack of duplication for "Service B"\nresults in it reaching the production version of "Service B".']}),"\n",(0,s.jsx)(n.li,{children:'The testing flow requires reaching the "Test Version" of "Service C" when sending a request to "\nService C." However, since "Service B" is in production and lacks the required source-labels,\nthe "Test Version" of "Service C" is never reached within this flow.'}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'To address this issue, you can override "Service B" by adding source-labels without any other\nmodifications. This allows you to complete the entire flow of your application successfully.'})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},9205:(e,n,i)=>{i.d(n,{Z:()=>s});const s=i.p+"assets/images/source-labels-78d8d21bc26b289685d2dc27981d8bf7.svg"},1151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>o});var s=i(7294);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);